<?php
 class MySQL_DAO extends Base_DAO { public function __construct(array $config = NULL) { if ( ! $this->dbh) { if ( ! $this->dbh = mysql_connect($config['host'], $config['user'], $config['pass'], TRUE)) { halt('An Error Was Encountered', 'Error establishing MySQL database connection. Correct user/password? Correct hostname? Database server running?', 'sys_error'); } else { if (function_exists('mysql_set_charset')) { mysql_set_charset($config['charset'], $this->dbh); } else { $collation_query = "SET NAMES '{$config['charset']}'"; if ( ! empty($config['collate'])) { $collation_query .= " COLLATE '{$config['collate']}'"; } $this->query($collation_query); } if ( ! mysql_select_db($config['name'], $this->dbh)) { halt('An Error Was Encountered', 'Can not select database', 'sys_error'); } } } } public function prepare($query, array $params = NULL) { if (count($params) > 0) { foreach ($params as $v) { if ($this->dbh && isset($this->dbh)) { $v = mysql_real_escape_string($v, $this->dbh); } else { $v = addslashes($v); } } $query = str_replace("'?'", '?', $query); $query = str_replace('"?"', '?', $query); $query = str_replace('?', "'%s'", $query); $query = vsprintf($query, $params); } return $query; } public function query($query) { $return_val = 0; $this->flush(); $query = trim($query); $this->last_query = $query; $result = mysql_query($query, $this->dbh); dump($result); if ($err_msg = mysql_error($this->dbh)) { halt('An Error Was Encountered', $err_msg, 'sys_error'); return FALSE; } if (preg_match("/^(insert|delete|update|replace)\s+/i", $query)) { $this->rows_affected = mysql_affected_rows($this->dbh); if (preg_match("/^(insert|replace)\s+/i", $query)) { $this->last_insert_id = mysql_insert_id($this->dbh); } $return_val = $this->rows_affected; } else { $num_rows = 0; while ($row = mysql_fetch_object($result)) { $this->last_result[$num_rows] = $row; $num_rows++; } mysql_free_result($result); $this->num_rows = $num_rows; $return_val = $this->num_rows; } return $return_val; } public function now() { return 'NOW()'; } public function trans_begin() { mysql_query('SET AUTOCOMMIT=0', $this->dbh); mysql_query('START TRANSACTION', $this->dbh); } public function trans_commit() { mysql_query('COMMIT', $this->dbh); mysql_query('SET AUTOCOMMIT=1', $this->dbh); } public function trans_rollback() { mysql_query('ROLLBACK', $this->dbh); mysql_query('SET AUTOCOMMIT=1', $this->dbh); } } 