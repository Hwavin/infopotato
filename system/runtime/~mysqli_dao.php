<?php
 class MySQLi_DAO extends Base_DAO { public $mysqli; public function __construct(array $config = NULL) { if ( ! is_object($this->mysqli)) { $this->mysqli = new mysqli($config['host'], $config['user'], $config['pass'], $config['name']); if (mysqli_connect_error()) { halt('An Error Was Encountered', 'Connect Error ('.mysqli_connect_errno().') '.mysqli_connect_error(), 'sys_error'); } if (method_exists($this->mysqli, 'set_charset')) { $this->mysqli->set_charset($config['charset']); } else { $collation_query = "SET NAMES '{$config['charset']}'"; if ( ! empty($config['collate'])) { $collation_query .= " COLLATE '{$config['collate']}'"; } $this->query($collation_query); } } } public function prepare($query, array $params = NULL) { if (count($params) > 0) { foreach ($params as $v) { if (isset($this->mysqli)) { $v = $this->mysqli->real_escape_string($v); } else { $v = addslashes($v); } } $query = str_replace("'?'", '?', $query); $query = str_replace('"?"', '?', $query); $query = str_replace('?', "'%s'", $query); $query = vsprintf($query, $params); } return $query; } public function query($query) { $return_val = 0; $this->flush(); $query = trim($query); $this->last_query = $query; $result = $this->mysqli->query($query); if ($err_msg = $this->mysqli->error) { halt('An Error Was Encountered', $err_msg, 'sys_error'); } if (preg_match("/^(insert|delete|update|replace)\s+/i", $query)) { $rows_affected = $this->mysqli->affected_rows; if (preg_match("/^(insert|replace)\s+/i", $query)) { $this->last_insert_id = $this->mysqli->insert_id; } $return_val = $rows_affected; } else { $num_rows = 0; while ($row = $result->fetch_object()) { $this->last_result[$num_rows] = $row; $num_rows++; } $result->free_result(); $this->num_rows = $num_rows; $return_val = $this->num_rows; } return $return_val; } public function now() { return 'NOW()'; } public function trans_begin() { $this->mysqli->autocommit(FALSE); } public function trans_commit() { $this->mysqli->commit(); } public function trans_rollback() { $this->mysqli->rollback(); } } 