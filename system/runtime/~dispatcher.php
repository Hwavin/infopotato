<?php
 class Dispatcher { public function __construct() { self::instance($this); } public static function run() { $request_method = (isset($_SERVER['REQUEST_METHOD']) && $_SERVER['REQUEST_METHOD'] === 'POST') ? 'post' : 'get'; $request_uri = isset($_SERVER['PATH_INFO']) ? trim($_SERVER['PATH_INFO'], '/') : ''; $uri_segments = ! empty($request_uri) ? explode('/', $request_uri) : NULL; if (isset($uri_segments) && is_array($uri_segments)) { foreach ($uri_segments as $val) { $val = self::_filter_uri($val); } } $manager_name = ! empty($uri_segments[0]) ? strtolower($uri_segments[0]) : strtolower(APP_DEFAULT_MANAGER); $method_name = ! empty($uri_segments[1]) ? strtolower($uri_segments[1]) : strtolower(APP_DEFAULT_MANAGER_METHOD); $real_method = $request_method.'_'.$method_name; $params_cnt = count($uri_segments); $params = array(); for ($i = 2; $i < $params_cnt; $i++) { $params[] = $uri_segments[$i]; } $manager_file = APP_MANAGER_DIR.$manager_name.'_manager.php'; if ( ! file_exists($manager_file)) { show_sys_error('An Error Was Encountered', 'Manager file does not exist', 'sys_error'); } require_once $manager_file; $manager_class = $manager_name.'_manager'; if ( ! class_exists($manager_class)) { show_sys_error('An Error Was Encountered', 'Manager class does not exist', 'sys_error'); } $manager_obj = new $manager_class; if ( ! method_exists($manager_obj, $real_method)) { show_sys_error('An Error Was Encountered', "The requested manager method '{$real_method}' does not exist in object '{$manager_class}'", 'sys_error'); } $manager_obj->{$real_method}($params); } public static function instance($new_instance = NULL) { static $instance = NULL; if (isset($new_instance) && is_object($new_instance)) { $instance = $new_instance; } return $instance; } private static function _filter_uri($str) { if ($str !== '') { if ( ! preg_match("|^[".str_replace(array('\\-', '\-'), '-', preg_quote(APP_PERMITTED_URI_CHARS, '-'))."]+$|i", $str)) { show_sys_error('An Error Was Encountered', 'The URI you submitted contains disallowed characters.', 'sys_error'); } } $bad = array('$', '(', ')', '%28', '%29'); $good = array('&#36;', '&#40;', '&#41;', '&#40;', '&#41;'); return str_replace($bad, $good, $str); } } 